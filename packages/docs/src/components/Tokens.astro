---
import allTokens from "@scouterna/design-tokens/tokens.js";

// interface Props {
//   title?: string;
// }

// const { title = "Tokens" } = Astro.props;

type TokenValueLeaf = {
  key: string;
  $value: string;
  $description?: string;
  original: {
    $value: string;
  };
};

type TokenRecord = {
  [key: string]: TokenRecord | TokenValueLeaf;
};

/**
 * Recursively extract all token value leafs from a nested token object.
 */
function getValueLeafs(obj: TokenRecord) {
  let leafs: TokenValueLeaf[] = [];

  for (const [key, value] of Object.entries(obj)) {
    if (typeof value === "object" && "$value" in value) {
      leafs.push(value as TokenValueLeaf);
    } else if (typeof value === "object") {
      leafs = leafs.concat(getValueLeafs(value as TokenRecord));
    }
  }

  return leafs;
}

function removeAliasTags(value: string) {
  return value.replace(/{(.*)}/, "$1");
}
---

{Object.entries(allTokens.color).map(([categoryName, category]) => {
  const valueLeafs = getValueLeafs(category)
    .sort((a, b) => a.key.localeCompare(b.key));

  return (
    <div>
      <h2>{categoryName}</h2>

      <div class="not-content flex flex-col gap-4 divide-y divide-gray-200">
        {valueLeafs.map(value => (
          <div class="flex pb-4 gap-4">
            <div class="flex-1">
              <code
                class="font-mono text-sm bg-gray-200 dark:bg-gray-700 px-1.5 py-0.5 rounded"
              >{removeAliasTags(value.key)}</code>
              <p>
                {value.$description}
              </p>
            </div>
            <div>
              <div class="flex flex-col gap-1 w-48 p-2 bg-white border border-gray-300 rounded-md">
                <div
                  class="h-6 border border-gray-300 rounded"
                  style={`background-color: ${value.$value}`}
                />
                <div class="font-mono text-sm px-px">
                  {removeAliasTags(value.original.$value)}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )
})}